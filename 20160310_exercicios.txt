03/10/2016

1. Crie a classe Contato, com nome, telefone  eseus getters e setters. Envio, com o cURL, uma requisição POST com esses mesmos dados. No arquivo ex1.php, obtenha os dados, instancia um contato e exiba seu conteúdo com var_dump();
Obs.: Colocar Contato em Contato.php

2. Crie um arquivo ValidacaoContato.php que tenha uma classe homônima com um método validar(Contato $c). O método deve retornar um array vazio se o contato estiver válido ou um array de mensagens caso contrário. Um contato válido é aquele cujo:

a) Nome está entre 2 e 100 caracteres;
b) Telefone só possui caracteres numéricos e até 11 caracteres.

Crie o arquivo ex2.php, semelhando ao ex1.php, que valide o objeto de contato e, em caso de:

a) sucesso, retorne 200
b) erro, retorne 400, com as mensagens como um array json

3. Crie uma interface ColecaoContato, em seu próprio arquivo PHP:

<<interface>>
ColecaoContato
--------------
<<throws>> adicionar(c:Contato);
		|				|
ColecaoException	Contato
----------------	-------

Crie a classe ColecaoException e a classe ColecaoContatoEmArquivoCSV, Esta última deve implementar a interface ColecaoContato.

A classe deve adicionar o contato ao fim do arquivo "contatos.csv", caso este seja válido - de acordo com ValidacaoContato. Se for inválido, o método adicionar() deve lançar uma exceção do tipo ColecaoException com as mensagens de validação concatenadas com espaço. Crie um arquivo ex3.php que instancie e salve o contato recebido via POST, usando as classes criadas. Retorne mensagens HTTP da mesma forma que no exercício 2.


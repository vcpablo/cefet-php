Expressões Regulares
--------------------
[ ] => Denota um conjunto

Exemplos:

[0-9] 	=> 	números
[a-z] 	=> 	letras minúsculas
[A-Z] 	=> 	letras maiúsculas
[a-Z] 	=> 	letras maiúsculas e minúsculas
[3-5] 	=> 	somente os números dentro do intervalo (incluindo 3 e 5)
[b-h] 	=> 	somente as letras de "b" a "h"

---------------------------------------

Exerício 1: Identificar somente um número hexadecimal

[0-9a-fA-F] 

---------------------------------------

Quantificadores
---------------

'+' 	=> 	pelo menos um
'*' 	=> 	nenhum, um ou mais
'?' 	=> 	faz virar opcional
{5} 	=> 	exatamente cinco, onde 5 pode ser substituído pelo número desejado
{2,10} 	=>	de 2 a 10
{2,} 	=> 	pelo menos 2
{,10} 	=> 	no máximo 10

Exemplos:

[0-9a-fA-F]+		=> 	pelo menos um número hexadecimal
[0-9]a-Z._-]{3,100} =>  nome de produto com no mínimo 3 caracteres e no máximo 100 caracteres que aceita: 						  números, letras, ponto, underscore e hífen
[0]{1}[0-7]+		=> 	número octal de programação

---------------------------------------

Modificadores
---------------

'.'		=> significa "qualquer coisa". Porém, dentro de um conjunto ele perde a função de metacaractere.
'^'		=> significa "começa com". Porém dentro de um conjunto ele significa "negação" ou "não", quando usado 		 como primeiro elemento.
'$' 	=> sgnifica "termina com".
'\' 	=> serve para "escapar" um metacaractere fora de um conjunto, para este perder esta função.


Exemplos:

[.*]				=> qualquer caracteres quantos caracteres quiser
[.*@cefet-rj\.br] 	=> qualquer coisa que termine com "@cefet-rj.br"

vcpablo@cefet-rj.br_nada_a_ver => casa com parte da expressão

^[0-9a-z]*@cefet-rj.br$ => deve começar com quantoas caracteres quiser desde que seja número ou letra minúscula e deve terminar exatamente com "@cefet-rj.br"


\\ 	=> para escrever uma contrabarra

---------------------------------------

Grupo
---------------
- denotado por parênteses;
- permite o uso de condicional, que é denotado por pipe '|';

Exemplos:

^.*@(gmail|hotmail|yahoo)\.com(\.br)?$

Exercício 2 - horas e minutos (ex.: 19:05)
^([0-1]?[0-9]|2[0-3]):([0-5][0-9])

* primeiro grupo
	primeiro dígito opcional com dígito seguinte de 0 a 9 
	OU
	primeiro dígito igual a 2 e dígito seguinte de 0 a 3

dois pontos obrigatoriamente

* segundo grupo
	primeiro dígito de 0 a 5 obrigatoriamente
	digito seguinte de 0 a 9 obrigatoriamente


Exercício 3 - Data brasileiro (ex.: 07/06/1991)

(0?[1-9]|[1-2][0-9]|3[0-1])\/
(0?[1-9]|1[0-2])\/[0-9]{4}

// em PHP checkdate( $mes, $dia, $ano )

Exercício 4 - validação de e-mail mais segura


^[a-z]([0-9a-z]*[._-]?[0-9a-z]+)+@[a-z]([0-9a-z]*[.-_]?[0-9a-z]+)+
